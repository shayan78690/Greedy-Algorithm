class Solution {

class Job {
    int deadline;
    int profit;
    
    Job(int deadline, int profit) {
        this.deadline = deadline;
        this.profit = profit;
    }
}
    public ArrayList<Integer> jobSequencing(int[] deadline, int[] profit) {
        int n = deadline.length;
        Job jobs[] = new Job[n];
        for(int i = 0; i < n; i++) {
            jobs[i] = new Job(deadline[i], profit[i]);
        }
        Arrays.sort(jobs, (a, b) -> b.profit - a.profit);
        
        int maxDeadline = 0;
        for(Job job : jobs) {
            maxDeadline = Math.max(maxDeadline, job.deadline);
        }
        
        int count = 0;
        int totalProfit = 0;
        boolean slots[] = new boolean[maxDeadline+1];
        for(Job job : jobs) {
            for(int j = job.deadline; j > 0; j--) {
                if(!slots[j]) {
                    slots[j] = true;
                    count++;
                    totalProfit += job.profit;
                    break;
                }
            }
        }
        ArrayList<Integer> ans = new ArrayList<>();
        ans.add(count);
        ans.add(totalProfit);
        return ans;
    }
}
